extends ../partials/master
block content
	.container.bg-light.py-3
		h2.text-center Editing #{ block.name }
		form(
			action="/dashboard/edit_block/" + block.minecraftName.slice(10),
			method='post'
		)
			.form-group.mb-3
				label(for='name') Name
				input.form-control(required, name='name', type='text', value=block.name)
			.form-group.mb-3
				label(for='minecraftName') Minecraft name
				input.form-control(
					required,
					name='minecraftName',
					type='text',
					value=block.minecraftName
				)
			.form-group.mb-3
				label(for='legacyID') Legacy ID
				input.form-control(
					required,
					name='legacyID',
					type='text',
					value=block.legacyID
				)
			.form-group.mb-3
				label(for='imageUrl') Image URL
				input.form-control(
					required,
					name='imageUrl',
					type='text',
					value=block.imageUrl
				)
			.form-group.mb-3
				label(for='introduced') Introduced in version:
				input.form-control(
					required,
					name='introduced',
					type='text',
					value=block.introduced
				)
			.form-group.mb-3
				input.form-check-input.me-1(
					type='checkbox',
					name='overworld',
					checked='${block.naturalSpawns.naturalSpawnInOverworldDimension ? \'checked\' : \'unchecked\'}'
				)
				label(for='overworld') Natural spawning in the overworld
				br
				input.form-check-input.me-1(
					type='checkbox',
					name='nether',
					checked='${block.naturalSpawns.naturalSpawnInNetherDimension ? \'checked\' : \'unchecked\'}'
				)
				label(for='nether') Natural spawning in the nether
				br
				input.form-check-input.me-1(
					type='checkbox',
					name='end',
					checked='${block.naturalSpawns.naturalSpawnInEndDimension ? \'checked\' : \'unchecked\'}'
				)
				label(for='end') Natural spawning in the end
			.form-group.mb-3
				label(for='defaultDrop') Default drop
				input.form-control(
					required,
					name='defaultDrop',
					type='text',
					value=block.drops.defaultDrop
				)
			.form-group.mb-3
				label(for='silkTouchDrop') Silk touch drop
				input.form-control(
					required,
					name='silkTouchDrop',
					type='text',
					value=block.drops.silkTouchDrop
				)
			.form-group.mb-3
				input.form-check-input.me-1(
					type='checkbox',
					name='affectedByFortune',
					checked=block.drops.dropAffectedByFortune
				)
				label(for='affectedByFortune') Affected by fortune
			.form-group.mb-3
				label(for='solidity') Solidity
				select.form-control(name='solidity')
					option(selected="" + block.solidity === "solid" ? "true" : "false") Solid
					option(selected="" + block.solidity === "liquid" ? "true" : "false") Liquid
					option(selected="" + block.solidity === "vacant" ? "true" : "false") Vacant
			.form-group.mb-3
				label(for='width') Width
				input.form-control(
					required,
					name='width',
					type='number',
					step='0.01',
					value=block.hitbox.width
				)
			.form-group.mb-3
				label(for='length') Length
				input.form-control(
					required,
					name='length',
					type='number',
					step='0.01',
					value=block.hitbox.length
				)
			.form-group.mb-3
				label(for='height') Height
				input.form-control(
					required,
					name='height',
					type='number',
					step='0.01',
					value=block.hitbox.height
				)
			.form-group.mb-3
				label(for='hardness') Hardness
				input.form-control(
					required,
					name='hardness',
					type='number',
					step='0.01',
					value=block.stats.hardness
				)
			.form-group.mb-3
				label(for='resistance') Blast Resistance
				input.form-control(
					required,
					name='resistance',
					type='number',
					step='0.01',
					value=block.stats.resistance
				)
			.form-group.mb-3
				label(for='opacity') Opacity
				input.form-control(
					required,
					name='opacity',
					type='number',
					step='0.01',
					value=block.stats.opacity
				)
			.form-group.mb-3
				label(for='luminance') Luminance
				input.form-control(
					required,
					name='luminance',
					type='number',
					step='0.01',
					value=block.stats.luminance
				)
			.form-group.mb-3
				label(for='minimumXP') Min XP on break
				input.form-control(
					required,
					name='minimumXP',
					type='number',
					step='0.01',
					value=block.minimumExperienceOnBreak
				)
			.form-group.mb-3
				label(for='maximumXP') Max XP on break
				input.form-control(
					required,
					name='maximumXP',
					type='number',
					step='0.01',
					value=block.maximumExperienceOnBreak
				)
			.form-group.mb-3
				label(for='tooldata') Tool data
				pre 
					textarea.autogrow.form-control(
						required,
						name='tooldata',
						type='text',
						style='resize: none'
					)= JSON.stringify(block.toolData, null, 2)
			.form-group.my-3
				input.form-check-input.me-1(
					type='checkbox',
					name='removed',
					checked=block.removed
				)
				label(for='removed') Removed
				br
				input.form-check-input.me-1(
					type='checkbox',
					name='slippery',
					checked=block.stats.slippery
				)
				label(for='slippery') Slippery
				br
				input.form-check-input.me-1(
					type='checkbox',
					name='flammable',
					checked=block.stats.flammable
				)
				label(for='flammable') Flammable
				br
				input.form-check-input.me-1(
					type='checkbox',
					name='catchesFireFromLava',
					checked=block.stats.catchesFireFromLava
				)
				label(for='catchesFireFromLava') Catches fire from lava
				br
				input.form-check-input.me-1(
					type='checkbox',
					name='brokenByWater',
					checked=block.stats.brokenByWater
				)
				label(for='brokenByWater') Broken by water
				br
				input.form-check-input.me-1(
					type='checkbox',
					name='interactive',
					checked=block.stats.interactive
				)
				label(for='interactive') Interactive
			input.btn.btn-secondary(type='submit', value='Upload')
